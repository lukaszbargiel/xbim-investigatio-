// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XbimFloorPlanGenerator.Data;

namespace XbimFloorPlanGenerator.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191115173846_part8")]
    partial class part8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ElevationOfTerrain")
                        .HasColumnType("float");

                    b.Property<string>("EntityLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Elevation")
                        .HasColumnType("float");

                    b.Property<string>("EntityLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floor");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.IfcFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WasProcessed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IfcFiles");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.ProductShape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BoundingBoxSizeX")
                        .HasColumnType("decimal(22,10)");

                    b.Property<decimal>("BoundingBoxSizeY")
                        .HasColumnType("decimal(22,10)");

                    b.Property<decimal>("BoundingBoxX")
                        .HasColumnType("decimal(22,10)");

                    b.Property<decimal>("BoundingBoxY")
                        .HasColumnType("decimal(22,10)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShapeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductShape");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntityLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectSet");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Space", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<double>("GrossFloorArea")
                        .HasColumnType("float");

                    b.Property<string>("IfcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NetFloorArea")
                        .HasColumnType("float");

                    b.Property<string>("SpaceCoordinates")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.ToTable("Space");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Wall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<string>("IfcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsExternal")
                        .HasColumnType("bit");

                    b.Property<double>("WallSideArea")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FloorId");

                    b.ToTable("Wall");
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Building", b =>
                {
                    b.HasOne("XbimFloorPlanGenerator.Data.Entities.Site", "Site")
                        .WithMany("Buildings")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Floor", b =>
                {
                    b.HasOne("XbimFloorPlanGenerator.Data.Entities.Building", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.ProductShape", b =>
                {
                    b.HasOne("XbimFloorPlanGenerator.Data.Entities.Wall", "Wall")
                        .WithMany("ProductShapes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Site", b =>
                {
                    b.HasOne("XbimFloorPlanGenerator.Data.Entities.Project", "Project")
                        .WithMany("Sites")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Space", b =>
                {
                    b.HasOne("XbimFloorPlanGenerator.Data.Entities.Floor", "Floor")
                        .WithMany("Spaces")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XbimFloorPlanGenerator.Data.Entities.Wall", b =>
                {
                    b.HasOne("XbimFloorPlanGenerator.Data.Entities.Floor", "Floor")
                        .WithMany("Walls")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
